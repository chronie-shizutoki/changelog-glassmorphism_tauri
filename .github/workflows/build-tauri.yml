name: Build Tauri App

on:
  push:
    tags: [ '*' ]  # 当推送到带有 * 格式的标签时触发
  pull_request:
    branches: [ main ]  # 当有 PR 到 main 分支时触发
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  release:
    permissions:
      contents: write  # 允许创建发布和上传资产
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/install-deps
        if: hashFiles('./.github/actions/install-deps') != ''

      # 安装 pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      # 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      # 安装项目依赖
      - name: Install project dependencies
        run: pnpm install

      # 构建前端
      - name: Build frontend
        run: pnpm build

      # 安装 Tauri CLI
      - name: Install Tauri CLI
        run: pnpm add -g @tauri-apps/cli

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 安装 Linux 依赖（仅在 Ubuntu 上）
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      # 构建 Tauri 应用
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # 仅在标签推送时发布
          releaseId: ${{ github.event_name == 'push' && github.ref_type == 'tag' && github.ref_name || '' }}

      # 上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-artifacts
          path: |
            src-tauri/target/release/bundle/**
            !src-tauri/target/release/bundle/**/target/**
          # v4 requires explicit compression level
          compression-level: 6